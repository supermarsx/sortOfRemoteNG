name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run format
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm test -- --run --coverage
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: coverage
      - name: Report coverage
        run: >-
          node -e "const fs=require('fs');const data=JSON.parse(fs.readFileSync('coverage/coverage-final.json','utf8'));let total=0,covered=0;for(const f of Object.values(data)){total+=Object.keys(f.statementMap).length;for(const k in f.s){if(f.s[k])covered++;}}const pct=(covered/total*100).toFixed(2);console.log('Coverage: '+pct+'%');"
